
함수
    특정 용도의 코드(명령어)를 모아 놓은 것.

    정의 형식)
    def 함수명(매개변수목록):
        실행 문장...

    사용 형식)
    함수명(값목록)

    - 코드의 용도를 구분할 수 있다.
    - 코드를 재사용할 수 있다.
    - 실수를 줄일 수 있다.

    호이스팅(hoisting)
    선언 전에 사용 가능한 기법.

    파이썬 함수는 호이스팅이 불가!

    반환(return)문
    def 함수명(매개변수):
        수행문장...
        return 값
    
    결과변수 = 함수명(값)

    지역변수와 전역변수
    함수 내부에 선언된 변수 - 지역변수
    함수 외부에 선언된 변수 - 전역변수

    함수 내부에서 전역변수 선언 - global 변수명

    패킹, 언패킹
    시퀀스 유형에 데이터를 넣는 작업 - 패킹(packing)
    시퀀스 유형에서 각 데이터를 꺼내서 각각의 변수에 분배하는 작업 - 언패킹(unpacking)
    변수의 언패킹
        x, y, z = 1, 2, 3

    함수에서 언패킹 사용하기
        def 함수명(a, b, c):
            ....
        
        list = [1, 2, 3]
        함수명(*list)

    주의) 매개변수의 개수와 시퀀스 원소의 개수가 같아야 함.

    가변인수 함수 : 매개변수의 개수가 정해지지 않은 함수.
        def 함수명(*매개변수명)
            for 변수 in 매개변수명:
                ...

다수의 return 활용
    파이썬에서는 결과값을 여러개 반환할 수 있음.
    형식)
        return a, b, c

        x, y, z = 함수()

연습 문제) 몫과 나머지를 구하는 함수를 작성하시오.

    키워드 인수 방식
        함수 호출 시 매개변수의 혼동으로 인한 오류를 막기위해 제공되는 방식.

    def func(int1, str, int2):
        ...
    func(1, 2, '+') -> 오류 발생
    func(int1=1, int2=2, str='+')

    기존 활용 예) print(a, b, c, sep=",", end="")
    sep와 end가 키워드 인수 방식을 활용한 예.

    딕셔너리 언패킹
    def func(a, b, c):
        ...
    
    dic = {'a':'str', 'b':100, 'c':200}
    func(**dic_value)

    딕셔너리 키(key)는 반드시 문자열이어야 한다.
    func(*dic_value)처럼 '*'를 하나만 작성하면 key에 해당하는 값이 각 변수에 언패킹된다.