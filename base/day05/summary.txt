파일 > 폴더 열기...
    day05 폴더 생성 및 열기...
    summary.txt 생성

예외 처리
    오류로 인한 프로그램의 비정상적인 종료를
    예방하는 작업.
    문법)
    try:
        예외가 발생할 수도 있는 코드들...
    except:
        예외가 발생했을 때 처리하는 코드들...
    else:
        예외가 발행하지 않았을 때 실행할 코드들...
    finally:
        예외 발생과 상관없이 항상 실행할 코드들...

    except 블록 활용>
    except 블록은 여러개 넣을 수 있음.
    'except 에러명:' 으로 각 예외에 따른 except 블록을
    작성할 수 있음.
    'except 에러명 as 식별자:' 식별자에 에러 메시지가 저장됨.
        에러 메시지를 출력할 때 사용.

    'except Exception:' - 모든 에러를 처리.
            'except 에러명'으로 지정한 특정 에러를 제외한
            나머지 에러를 처리하는 형식.
        'except:'만 사용해도 모든 에러를 처리.

    예외 발생시키기 - raise Exception('메시지')
        오류가 아닌 상황에서 메시지 전송을 위해 사용하는 형태

    활용예)
    if 조건:
        raise Exception('메시지1')
    elif 조건:
        raise Exception('메시지2')
    else:
        raise Exception('메시지3')

모듈과 패키지 만들기
1. 모듈 만들기
    특정 목적(기능)을 처리할 수 있는 변수, 함수, 클래스를 
    하나의 파일로 모아 놓은 것. -> 모듈
    import로 가져와서 사용.
2. 패키지 만들기
    모듈을 모아 놓은 폴더 -> 패키지
    패키지에 __init__.py 파일을 작성하면,
    폴더를 패키지로 인식하게 됨.
    (3.3버전 이후에는 __init__.py 없이도 
    패키지로 인식하지만, 하위버전과의 호환을 위해
    작성하는 것을 권장함.)
    __init__.py 파일에는 아무것도 작성하지 않아도
    됨.

    'import 패키지.모듈'로 사용.

'__name__' 과 '__main__'
    __name__은 특수 변수로 코드(스크립트)파일이 
    단독으로 실행되거나 프로그램의 시작점으로 
    실행되는 경우에는 '__main__' 문자열을 저장하며,
    모듈로 실행될 때는 '.py'를 제외한
    파일의 이름이 저장된다.
    
    if __name__ == '__main__':
        메인일때만_실행할_코드...

    프로그램을 시작할 때 '__name__'의 값을 
    확인함으로서 모듈인지 메인인지를 구별하고, 
    메인일 때만 실행해야하는 코드의 실행을 막는다.
